// Niko Auth Core - Main Authentication System v3.0.0 (Modular)
(function(window){'use strict';const CONFIG={SUPABASE_URL:'https://bzjoxjqfpmjhbfijthpp.supabase.co',SUPABASE_ANON_KEY:'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ6am94anFmcG1qaGJmaWp0aHBwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU3NjIyMzksImV4cCI6MjA3MTMzODIzOX0.sL9omeLIgpgqYjTJM6SGQPSvUvm5z-Yr9rOzkOi2mJk',ROUTES:{CUSTOMER_DASHBOARD:'/dev/app/customer/dashboard',RETAILER_DASHBOARD:'/dev/app/retailer/dashboard',LOGIN_PAGE:'/dev/app/auth/log-in'}};class NikoAuthCore{constructor(){this.supabase=null;this.initialized=false;this.init()}async init(){console.log('Loading Niko Auth Core v3.0.0 (Modular)');if(typeof supabase==='undefined'){await this.loadSupabase()}this.supabase=supabase.createClient(CONFIG.SUPABASE_URL,CONFIG.SUPABASE_ANON_KEY);this.initialized=true;console.log('Niko Auth Core initialized successfully');this.setupLogoutHandlers();this.checkAuthState()}isInitialized(){return this.initialized}loadSupabase(){return new Promise((resolve,reject)=>{const script=document.createElement('script');script.src='https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2';script.onload=resolve;script.onerror=reject;document.head.appendChild(script)})}async register(email,password,name,userType){console.log('Registering user:',{email,userType});if(!this.initialized){throw new Error('Authentication system not initialized')}try{const baseHref=document.querySelector('base')?.href||location.origin+'/';const redirectUrl=userType.toLowerCase()==='retailer'?baseHref+'dev/app/retailer/onboarding':baseHref+'dev/app/customer/onboarding';const{data,error}=await this.supabase.auth.signUp({email:email,password:password,options:{data:{name:name,user_type:userType.toLowerCase(),role:userType.toLowerCase()},emailRedirectTo:redirectUrl}});if(error){console.error('Registration error:',error);return{success:false,error:error.message}}console.log('Registration successful:',data.user?.email);await this.createWebflowRecord(data.user.id,email,name,userType);return{success:true,user:data.user}}catch(error){console.error('Registration failed:',error);return{success:false,error:error.message}}}async login(email,password){console.log('Logging in user:',{email});if(!this.initialized){throw new Error('Authentication system not initialized')}try{const{data,error}=await this.supabase.auth.signInWithPassword({email:email,password:password});if(error){console.error('Login error:',error);return{success:false,error:error.message}}console.log('Login successful:',data.user?.email);return{success:true,user:data.user}}catch(error){console.error('Login failed:',error);return{success:false,error:error.message}}}async logout(){console.log('Logging out user...');if(!this.initialized){throw new Error('Authentication system not initialized')}try{const{error}=await this.supabase.auth.signOut();localStorage.clear();sessionStorage.clear();if(error){console.error('Logout error:',error);return{success:false,error:error.message}}console.log('Logout successful');return{success:true}}catch(error){console.error('Logout failed:',error);return{success:false,error:error.message}}}async getCurrentUser(){if(!this.initialized)return null;try{const{data:{user},error}=await this.supabase.auth.getUser();if(error)throw error;return user}catch(error){console.error('Get user failed:',error);return null}}async isAuthenticated(){const user=await this.getCurrentUser();return!!user}async createWebflowRecord(userId,email,name,userType){try{const{data,error}=await this.supabase.functions.invoke('create-webflow-user',{body:{user_id:userId,email:email,name:name,user_type:userType}});if(error){console.warn('Webflow integration error (user still created in Supabase):',error)}else{console.log('Webflow CMS record created')}}catch(error){console.warn('Edge function error:',error)}}getRedirectUrl(userType){return userType.toLowerCase()==='retailer'?CONFIG.ROUTES.RETAILER_DASHBOARD:CONFIG.ROUTES.CUSTOMER_DASHBOARD}setupLogoutHandlers(){if(typeof document==='undefined')return;const logoutSelectors=['[niko-data="logout"]','[data-logout]','.logout-btn','.logout-button','a[href*="logout"]','button[onclick*="logout"]'];const logoutElements=[];logoutSelectors.forEach(selector=>{document.querySelectorAll(selector).forEach(element=>{if(!logoutElements.includes(element)){logoutElements.push(element)}})});console.log(`Found ${logoutElements.length} logout elements`);logoutElements.forEach(element=>{const newElement=element.cloneNode(true);element.parentNode.replaceChild(newElement,element);newElement.addEventListener('click',async(e)=>{e.preventDefault();e.stopPropagation();console.log('Logout button clicked');const originalText=newElement.textContent;try{newElement.textContent='Logging out...';newElement.disabled=true;const result=await this.logout();console.log('Logout result:',result);window.location.href=CONFIG.ROUTES.LOGIN_PAGE}catch(error){console.error('Logout error:',error);newElement.textContent=originalText;newElement.disabled=false;window.location.href=CONFIG.ROUTES.LOGIN_PAGE}})});console.log(`Setup ${logoutElements.length} logout handlers`)}async checkAuthState(){if(typeof document==='undefined')return;try{const user=await this.getCurrentUser();if(user){this.displayUserInfo(user);console.log('User authenticated:',user.email)}else if(this.isProtectedPage()){console.log('No user found on protected page, redirecting...');window.location.href=CONFIG.ROUTES.LOGIN_PAGE}}catch(error){console.error('Auth state check failed:',error)}}displayUserInfo(user){if(typeof document==='undefined')return;const userName=user.user_metadata?.name||user.email.split('@')[0];const userRole=user.user_metadata?.user_type||'customer';const userSelectors={name:['[data-user="name"]','[niko-data="user-name"]','.user-name','#user-name'],email:['[data-user="email"]','[niko-data="user-email"]','.user-email','#user-email'],role:['[data-user="role"]','[niko-data="user-role"]','.user-role','#user-role']};userSelectors.name.forEach(selector=>{document.querySelectorAll(selector).forEach(el=>el.textContent=userName)});userSelectors.email.forEach(selector=>{document.querySelectorAll(selector).forEach(el=>el.textContent=user.email)});userSelectors.role.forEach(selector=>{document.querySelectorAll(selector).forEach(el=>el.textContent=userRole)});console.log('User info displayed')}isProtectedPage(){if(typeof window==='undefined')return false;const protectedPaths=['/dev/app/customer/','/dev/app/retailer/','/dashboard','/profile'];return protectedPaths.some(path=>window.location.pathname.includes(path))}}window.NikoAuth=new NikoAuthCore();window.nikologout=async function(){if(window.NikoAuth){await window.NikoAuth.logout();window.location.href=CONFIG.ROUTES.LOGIN_PAGE}}})(window);

// Signup Form Handler
(function(window){'use strict';class SignupFormHandler{constructor(){this.initialized=false;this.init()}async init(){if(document.readyState==='loading'){document.addEventListener('DOMContentLoaded',()=>this.setupFormHandlers())}else{this.setupFormHandlers()}}setupFormHandlers(){console.log('SignupFormHandler: Setting up form handlers');const forms=document.querySelectorAll('form[data-name="Signup Form"],form[data-name="wf-form-Signup-Form"],#wf-form-Signup-Form');forms.forEach(form=>{console.log('SignupFormHandler: Found signup form:',form.getAttribute('data-name')||form.id);this.interceptWebflowForm(form)});const authForms=document.querySelectorAll('[niko-data="signup-form"],[data-auth-form="signup"]');authForms.forEach(form=>{console.log('SignupFormHandler: Found auth form');this.interceptWebflowForm(form)})}interceptWebflowForm(form){const newForm=form.cloneNode(true);form.parentNode.replaceChild(newForm,form);newForm.addEventListener('submit',async(e)=>{e.preventDefault();e.stopPropagation();console.log('SignupFormHandler: Form submission intercepted');const formData=new FormData(newForm);const email=formData.get('email')||formData.get('Email');const password=formData.get('password')||formData.get('Password');const name=formData.get('name')||formData.get('Name')||formData.get('Full-Name');let userType=formData.get('user_type')||formData.get('User-Type');if(!userType){const activeTab=document.querySelector('.w-tab-link.w--current,[data-user-type].w--current');if(activeTab){userType=activeTab.getAttribute('data-user-type')||activeTab.textContent.trim()}}userType=userType||'Customer';console.log('SignupFormHandler: Form data:',{email,name,userType});if(!email||!password){this.showError(newForm,'Please fill in all required fields');return}this.showLoading(newForm);try{await this.waitForNikoAuth();const result=await window.NikoAuth.register(email,password,name,userType);if(result.success){console.log('SignupFormHandler: Registration successful');this.showSuccessModal(email);newForm.style.display='none';const successMessage=newForm.parentElement.querySelector('.w-form-done');if(successMessage){successMessage.style.display='block'}}else{console.error('SignupFormHandler: Registration failed:',result.error);this.showError(newForm,result.error||'Registration failed. Please try again.');this.hideLoading(newForm)}}catch(error){console.error('SignupFormHandler: Error:',error);this.showError(newForm,'An error occurred. Please try again.');this.hideLoading(newForm)}})}async waitForNikoAuth(){let attempts=0;while(attempts<50){if(window.NikoAuth&&window.NikoAuth.isInitialized()){return}await new Promise(resolve=>setTimeout(resolve,100));attempts++}throw new Error('NikoAuth not initialized')}showLoading(form){const submitButton=form.querySelector('input[type="submit"],button[type="submit"]');if(submitButton){submitButton.disabled=true;submitButton.dataset.originalText=submitButton.value||submitButton.textContent;if(submitButton.value){submitButton.value='Creating account...'}else{submitButton.textContent='Creating account...'}}}hideLoading(form){const submitButton=form.querySelector('input[type="submit"],button[type="submit"]');if(submitButton&&submitButton.dataset.originalText){submitButton.disabled=false;if(submitButton.value!==undefined){submitButton.value=submitButton.dataset.originalText}else{submitButton.textContent=submitButton.dataset.originalText}}}showError(form,message){const errorMessage=form.parentElement.querySelector('.w-form-fail');if(errorMessage){const errorText=errorMessage.querySelector('div');if(errorText){errorText.textContent=message}errorMessage.style.display='block'}else{const error=document.createElement('div');error.className='form-error-message';error.style.cssText='color:red;margin-top:10px;padding:10px;background:#fee;border-radius:4px;';error.textContent=message;form.appendChild(error);setTimeout(()=>error.remove(),5000)}}showSuccessModal(email){const modal=document.querySelector('[niko-data="email-confirmation-modal"],#email-confirmation-modal,.email-confirmation-modal');if(modal){const emailElement=modal.querySelector('[niko-data="user-email"],.user-email,span.email');if(emailElement){emailElement.textContent=email}modal.style.display='flex';modal.classList.add('is-visible');const closeButtons=modal.querySelectorAll('[niko-data="close-modal"],.close-modal,.modal-close');closeButtons.forEach(btn=>{btn.addEventListener('click',()=>{modal.style.display='none';modal.classList.remove('is-visible')})})}else{this.createEmailConfirmationModal(email)}}createEmailConfirmationModal(email){const modal=document.createElement('div');modal.className='niko-email-confirmation-modal';modal.style.cssText='position:fixed;top:0;left:0;right:0;bottom:0;background:rgba(0,0,0,0.8);display:flex;align-items:center;justify-content:center;z-index:10000;';modal.innerHTML=`<div style="background:white;padding:40px;border-radius:8px;max-width:500px;text-align:center;"><h2 style="margin-bottom:20px;">Check Your Email!</h2><p style="margin-bottom:20px;">We've sent a confirmation email to:</p><p style="font-weight:bold;margin-bottom:20px;">${email}</p><p style="margin-bottom:30px;">Please click the link in the email to complete your registration.</p><button onclick="this.closest('.niko-email-confirmation-modal').remove()" style="padding:10px 30px;background:#333;color:white;border:none;border-radius:4px;cursor:pointer;">OK</button></div>`;document.body.appendChild(modal)}}window.NikoSignupFormHandler=new SignupFormHandler()})(window);